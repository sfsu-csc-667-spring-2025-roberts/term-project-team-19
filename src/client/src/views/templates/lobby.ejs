<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Lobby</title>
  <% styles.forEach(function(style) { %>
    <link rel="stylesheet" href="<%= style %>">
  <% }); %>
  <script src="/js/auth.js"></script>
  <script src="/js/game.js"></script>
  <style>
    .popup-overlay {
      position: fixed;
      top: 60px; /* Account for menu bar height */
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgba(0, 0, 0, 0.7);
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 1000;
    }

    .popup-window {
      background: #121212;
      border-radius: 8px;
      width: 90%;
      max-width: 1200px;
      max-height: calc(90vh - 60px); /* Account for menu bar height */
      position: relative;
      display: flex;
      flex-direction: column;
    }

    .close-button {
      position: absolute;
      top: 15px;
      right: 15px;
      background: none;
      border: none;
      color: #888;
      font-size: 24px;
      cursor: pointer;
      z-index: 1001;
      padding: 5px;
      line-height: 1;
    }

    .close-button:hover {
      color: #ff4400;
    }

    .lobby-container {
      display: flex;
      flex-direction: column;
      height: 100%;
      padding: 20px;
    }

    .game-header {
      text-align: center;
      margin-bottom: 20px;
      padding-top: 20px;
    }

    .game-header h1 {
      color: #ff4400;
      font-size: 2.5rem;
      margin: 0;
    }

    .lobby-content {
      display: flex;
      gap: 20px;
      flex: 1;
      min-height: 0;
    }

    .players-section {
      flex: 1;
      display: flex;
      flex-direction: column;
      gap: 10px;
      overflow-y: auto;
    }

    .list-item {
      min-height: 120px;
      display: flex;
      align-items: center;
      padding: 20px;
    }

    .game-info {
      width: 100%;
    }

    .game-info h3 {
      font-size: 1.5rem;
      margin-bottom: 10px;
    }

    .chat-section {
      width: 300px;
      display: flex;
      flex-direction: column;
    }

    .chat-window {
      height: 400px;
      background: #1e1e1e;
      border-radius: 8px;
      padding: 15px;
      display: flex;
      flex-direction: column;
    }

    .chat-messages {
      flex: 1;
      overflow-y: auto;
      margin-bottom: 10px;
    }

    .chat-input {
      display: flex;
      gap: 10px;
    }

    .chat-input input {
      flex: 1;
      padding: 8px;
      background: #2e2e2e;
      border: 1px solid #444;
      color: white;
      border-radius: 4px;
    }

    .start-game-container {
      margin-top: 20px;
      text-align: center;
    }

    .waiting-message {
      color: #888;
      font-size: 1.1rem;
      margin: 0;
      padding: 10px;
    }
  </style>
</head>
<body>

    <%- include('shared/head') %>


  <div class="popup-overlay">
    <div class="popup-window">
      <button class="close-button" id="close-popup">Ã—</button>
      
      <div class="lobby-container">
        <div class="game-header">
          <h1 id="game-name">Loading...</h1>
        </div>

        <div class="lobby-content">
          <div class="players-section" id="players-section">
            <!-- Players will be populated here -->
          </div>

          <div class="chat-section">
            <div class="chat-window">
              <h3>Chat</h3>
              <div class="chat-messages" id="chat-messages"></div>
              <div class="chat-input">
                <input type="text" placeholder="Type a message...">
                <button class="join-button">Send</button>
              </div>
            </div>

            <div class="start-game-container">
              <button 
                class="create-game-button" 
                id="start-game"
                style="display: none;"
              >
                Start Game
              </button>
              <p class="waiting-message" id="waiting-message" style="display: none;">
                Waiting for host to start the game...
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    const game = Game.getInstance();
    const user = auth.getUser();
    console.log("user: ", user);
    const gameId = user.game_id;
    const userId = user.id;
    const gameData = game.fetchGame(gameId);
    console.log("gameData: ", gameData);

    // Check if user is already authenticated
    auth.isAuthenticated().then(isAuth => {
      if (!isAuth) {
        window.location.href = "/login";
      } else {
        loadGameData();
      }
    });

    async function loadGameData() {
      try {
        const gameData = await game.fetchGame(gameId);
        if (gameData) {
          updateGameUI(gameData);
        }
      } catch (error) {
        console.error('Error loading game data:', error);
      }
    }

    function updateGameUI(gameData) {
      // Update game name
      document.getElementById('game-name').textContent = gameData.name;

      // Update players list
      const playersSection = document.getElementById('players-section');
      playersSection.innerHTML = gameData.players.map(player => `
        <div class="list-item ${player.id === gameData.hostId ? 'host' : ''}">
          <div class="game-info">
            <h3>${player.username}</h3>
            ${player.id === gameData.hostId ? '<p>Host</p>' : ''}
          </div>
        </div>
      `).join('');

      // Update start game button
      const startGameBtn = document.getElementById('start-game');
      const waitingMessage = document.getElementById('waiting-message');
      
      if (userId === gameData.hostId) {
        startGameBtn.style.display = gameData.playerCount < 2 ? 'none' : 'block';
        waitingMessage.style.display = 'none';
      } else {
        startGameBtn.style.display = 'none';
        waitingMessage.style.display = 'block';
      }
    }

    // Start game button handler
    document.getElementById('start-game')?.addEventListener('click', function() {
      fetch(`/games/${gameId}/start`, {
        method: 'POST',
        credentials: 'include'
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Failed to start game');
        }
        window.location.href = `/game/${gameId}`;
      })
      .catch(error => {
        console.error('Error starting game:', error);
      });
    });

    // Close popup handler
    document.getElementById('close-popup').addEventListener('click', function() {
      window.location.href = '/';
    });

    // Poll for game updates every 5 seconds
    setInterval(loadGameData, 5000);
  </script>
</body>
</html>